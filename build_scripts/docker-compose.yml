
x-common-variables: &common-variables
  RUST_LOG: "debug"
  CONFIG_FILE: "/etc/omnipaxos/server-config.toml"

services:
  s1:
    image: omnipaxos-server
    build:
      context: ./..
      dockerfile: omnipaxos_server/Dockerfile
    container_name: s1
    environment:
      <<: *common-variables
    volumes:
      - ./server-1-config.toml:/etc/omnipaxos/server-config.toml
      - ../benchmarks/logs/local-run:/var/log/omnipaxos
    networks:
      - postgres-network
      - servers-network
    ports:
      - "8001:8001"
    depends_on:
      - db1
  s2:
    image: omnipaxos-server
    container_name: s2
    environment:
      <<: *common-variables
    volumes:
      - ./server-2-config.toml:/etc/omnipaxos/server-config.toml
      - ../benchmarks/logs/local-run:/var/log/omnipaxos
    networks:
      - postgres-network
      - servers-network
    ports:
      - "8002:8002"
    depends_on:
      - db2
  s3:
    image: omnipaxos-server
    container_name: s3
    environment:
      <<: *common-variables
    volumes:
      - ./server-3-config.toml:/etc/omnipaxos/server-config.toml
      - ../benchmarks/logs/local-run:/var/log/omnipaxos
    networks:
      - postgres-network
      - servers-network
    ports:
      - "8003:8003"
    depends_on:
      - db3

  c1:
    image: omnipaxos-client
    build:
      context: ./..
      dockerfile: client.dockerfile
    container_name: c1
    environment:
      RUST_LOG: "debug"
      CONFIG_FILE: "/app/client-config.toml"
      OMNIPAXOS_SERVER_ADDRESS: "s1:8001" # Overwrite server_address in client config TOML
    networks:
      - servers-network
    volumes:
      - ./client-1-config.toml:/app/client-config.toml
      - ./logs/:/app/logs/
      - ../benchmarks/logs/local-run:/var/log/omnipaxos
    depends_on:
      - s1

  c2:
    image: omnipaxos-client
    container_name: c2
    environment:
      RUST_LOG: "debug"
      CONFIG_FILE: "/app/client-config.toml"
      OMNIPAXOS_SERVER_ADDRESS: "s2:8002" # Overwrite server_address in client config TOML
    networks:
      - servers-network
    volumes:
      - ./client-2-config.toml:/app/client-config.toml
      - ./logs/:/app/logs/
      - ../benchmarks/logs/local-run/:/var/log/omnipaxos/
    depends_on:
      - s2
      

  db1:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5431:5432"
    networks:
      - postgres-network
    volumes:
      - ../pg-data/:/var/lib/god_db/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: ["postgres"]

  db2:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres-network
    volumes:
      - ../pg-data/:/var/lib/god_db/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: ["postgres"]

  db3:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - postgres-network
    volumes:
      - ../pg-data/:/var/lib/god_db/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: ["postgres"]

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
     - "8009:8080"
    networks:
      - postgres-network
    depends_on:
     - db1
     - db2
     - db3

networks:
  postgres-network:
    driver: bridge
  servers-network:
    driver: bridge
